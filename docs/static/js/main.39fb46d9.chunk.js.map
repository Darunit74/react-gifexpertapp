{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCTjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAEnBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAEnB,MAAO,CACHF,GAAIA,EACJC,MAAOA,EACPV,IAAG,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBZ,QAbjB,kBAiBbM,GAjBa,4CAAH,sDCETO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLJO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IAEEqB,EDlB0BK,CAAc1B,GAAlCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAsDhB,EAAtD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAkB,GAAK,OACb,cAAC,EAAD,eAESA,GADCA,EAAMhB,aEZ/BiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAaA,GADLA,Y,MChBhC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.39fb46d9.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [ inputValue, ...categories ] ); \r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n  export const getGifs = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=vzNqKaTB5o7sfU0phmOWqBBkEaeIDXdM`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        const { id, title, images } = img;\r\n\r\n        return {\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n     return gifs;\r\n\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    // console.log({ id, title, url });\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title}></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" > { category } </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\" >Loading</p> }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( image => (\r\n                            <GifGridItem \r\n                                key={ image.id }\r\n                                { ...image }\r\n                            />\r\n                    \r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            });\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n};\r\n\r\n","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( e => [ ...e, 'HunterXHunter'] );\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key = { category }\r\n                        category = { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}